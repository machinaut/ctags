--- regex-0.12/regex.c	1993-04-02 17:17:03.000000000 -0600
+++ regex.c	2007-07-16 23:02:09.000000000 -0500
@@ -1,5 +1,5 @@
 /* Extended regular expression matching and search library,
-   version 0.12.
+   version 0.12, which minor changes by Darren Hiebert.
    (Implements POSIX draft P10003.2/D11.2, except for
    internationalization features.)
 
@@ -2831,7 +2831,7 @@
     {
       bufp->regs_allocated = REGS_UNALLOCATED;
       regs->num_regs = 0;
-      regs->start = regs->end = (regoff_t) 0;
+      regs->start = regs->end = NULL;
     }
 }
 
@@ -4873,8 +4873,8 @@
    from either regcomp or regexec.   We don't use PREG here.  */
 
 size_t
-regerror (errcode, preg, errbuf, errbuf_size)
-    int errcode;
+regerror (code, preg, errbuf, errbuf_size)
+    int code;
     const regex_t *preg;
     char *errbuf;
     size_t errbuf_size;
@@ -4882,15 +4882,15 @@
   const char *msg;
   size_t msg_size;
 
-  if (errcode < 0
-      || errcode >= (sizeof (re_error_msg) / sizeof (re_error_msg[0])))
+  if (code < 0
+      || code >= (sizeof (re_error_msg) / sizeof (re_error_msg[0])))
     /* Only error codes returned by the rest of the code should be passed 
        to this routine.  If we are given anything else, or if other regex
        code generates an invalid error code, then the program has a bug.
        Dump core so we can fix it.  */
     abort ();
 
-  msg = re_error_msg[errcode];
+  msg = re_error_msg[code];
 
   /* POSIX doesn't require that we do anything in this case, but why
      not be nice.  */
